apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"] as int
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    useLibrary rootProject.ext.dependencies["httpclient"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"] as int
        targetSdkVersion rootProject.ext.android["targetSdkVersion"] as int
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            //自定义Gradle常量
            buildConfigField("boolean", "LOG_DEBUG", "true")
            buildConfigField("String", "LOG_TAG", "\"Meet\"")
            buildConfigField("String", "SP_NAME", "\"Config\"")
        }
        release {
            buildConfigField("boolean", "LOG_DEBUG", "true")
            buildConfigField("String", "LOG_TAG", "\"Meet\"")
            buildConfigField("String", "SP_NAME", "\"Config\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["captcha"]
    api rootProject.ext.dependencies["bmobsdk"]
    api rootProject.ext.dependencies["rxjava2"]
    api rootProject.ext.dependencies["rxandroid2"]
    api rootProject.ext.dependencies["okio"]
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["tagcloud"]

}